{"version":3,"sources":["components/Square.js","components/Game.js","components/ItemTypes.js","components/Overlay.js","components/BoardSquare.js","components/Knight.js","components/Piece.js","components/Pawn.js","components/Board.js","App.js","index.js"],"names":["Square","_ref","isBlack","children","backgroundColor","react_default","a","createElement","className","style","knightPosition","observers","emitChange","forEach","o","ItemTypes","Overlay","color","position","top","left","height","width","zIndex","opacity","DropTarget","canDrop","props","toX","toY","_knightPosition","_knightPosition2","Object","slicedToArray","dx","dy","Math","abs","canMoveKnight","x","y","drop","connect","monitor","connectDropTarget","dropTarget","isOver","black","components_Overlay","DragSource","beginDrag","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","Fragment","cjs","src","ref","cursor","alt","Piece","isPiece","components_Knight","Board","_ref$piecePosition","piecePosition","pieceX","pieceY","renderSquare","i","floor","key","components_BoardSquare","Piece_Piece","squares","push","border","margin","display","gridGap","gridTemplateColumns","gridTemplateRows","App","_useState","useState","_useState2","knightPos","setPiecePos","useEffect","newPos","filter","t","components_Board","rootElement","document","getElementById","ReactDOM","render","backend","HTML5Backend","src_App_0"],"mappings":"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","file":"static/js/main.67343b29.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Square({ isBlack, children }) {\n  // fill the background with the correct color\n  const backgroundColor = isBlack ? '#b5915f' : '#441a03';\n  return (\n    <div className=\"square\"\n    style={{\n      backgroundColor: backgroundColor,\n    }}>\n      {children}\n    </div>\n  )\n};","let knightPosition = [1,7];\nlet observers = [];\n\nfunction emitChange() {\n  observers.forEach(o => o && o(knightPosition));\n}\n\nexport function observe(o) {\n  observers.push(o);\n  emitChange();\n  return () => {\n    observers = observers.filter(t => t !== o)\n  }\n}\n\nexport function movePiece(toX, toY) {\n  knightPosition = [toX, toY];\n  emitChange();\n}\n\nexport function canMoveKnight(toX, toY) {\n  const [x, y] = knightPosition;\n  const dx = toX - x;\n  const dy = toY - y;\n\n  return (\n    (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n    (Math.abs(dx) === 1 && Math.abs(dy) === 2)\n  );\n}","export const ItemTypes = {\n  KNIGHT: 'knight',\n  PAWN: 'pawn',\n}","import React from 'react'\nconst Overlay = ({ color }) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        zIndex: 1,\n        opacity: 0.5,\n        backgroundColor: color,\n      }}\n    />\n  )\n}\nexport default Overlay","import React from 'react';\nimport Square from './Square';\nimport { canMoveKnight, movePiece } from './Game'\nimport { ItemTypes } from './ItemTypes'\nimport { DropTarget } from 'react-dnd'\nimport Overlay from './Overlay'\n\nconst BoardSquare = ({ \n  x,\n  y,\n  connectDropTarget,\n  isOver,\n  canDrop,\n  children\n}) => {\n  // fill the background with the correct color\n  const black = (x + y) % 2 === 1;\n\n  return connectDropTarget(\n    <div style={{\n      position: 'relative',\n    }}>\n      <Square isBlack={black}>{children}</Square>\n      {isOver && !canDrop && <Overlay color=\"red\" />}\n      {!isOver && canDrop && <Overlay color=\"yellow\" />}\n      {isOver && canDrop && <Overlay color=\"green\" />}\n    </div>,\n  )\n}\n\nexport default DropTarget(\n  ItemTypes.KNIGHT,\n  {\n    canDrop: props => canMoveKnight(props.x, props.y),\n    drop: props => movePiece(props.x, props.y),\n  },\n  (connect, monitor) => {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n    }\n  }\n)(BoardSquare)","import React from 'react'\nimport { ItemTypes } from './ItemTypes';\nimport { DragSource, DragPreviewImage } from 'react-dnd';\n\nconst Knight = ({ connectDragSource, connectDragPreview, isDragging }) => {\n  return (\n    <>\n      <DragPreviewImage connect={connectDragPreview} src='https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg' />\n      <div\n      ref={connectDragSource}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        width: '5vw',\n        height: 'auto',\n        cursor: 'move',\n        color: 'white',\n      }}>\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\" alt=\"White Knight\"/>\n      </div>\n    </>\n  )\n};\n\nexport default DragSource(\n  ItemTypes.KNIGHT,\n  {\n    beginDrag: () => ({}),\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  }),\n)(Knight);","import React from 'react';\nimport Knight from './Knight';\nimport Pawn from './Pawn';\n\nexport const Piece = ({ isPiece }) => (isPiece ? <Knight /> : null);","import React from 'react'\nimport { ItemTypes } from './ItemTypes';\nimport { DragSource, DragPreviewImage } from 'react-dnd';\n\nconst Pawn = ({ connectDragSource, connectDragPreview, isDragging }) => {\n  return (\n    <>\n      <DragPreviewImage connect={connectDragPreview} src='https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg' />\n      <div\n      ref={connectDragSource}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        width: '5vw',\n        height: 'auto',\n        cursor: 'move',\n        color: 'white',\n      }}>\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" alt=\"White Pawn\"/>\n      </div>\n    </>\n  )\n};\n\nexport default DragSource(\n  ItemTypes.PAWN,\n  {\n    beginDrag: () => ({}),\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  }),\n)(Pawn);","import React from 'react';\nimport BoardSquare from './BoardSquare';\nimport { Piece } from './Piece';\n\nconst Board = ({ piecePosition: [pieceX, pieceY] }) => {\n  function renderSquare(i) {\n    const x = i % 8;\n    const y = Math.floor(i/8);\n    return (\n      <div \n      key={i}\n      className=\"square-wrapper\">\n        <BoardSquare x={x} y={y}>\n          <Piece isPiece={x === pieceX && y === pieceY} />\n        </BoardSquare>\n      </div>\n    )\n  }\n  const squares = [];\n  for (let i = 0; i < 64; i++) {\n    squares.push(renderSquare(i));\n  }\n  return <div style={{\n    border: '20px solid #462921',\n    width: '80vw',\n    margin: '0 auto',\n    display: 'grid',\n    gridGap: '0',\n    gridTemplateColumns: 'repeat(8, minmax(32px, 10vw))',\n    gridTemplateRows: 'repeat(8, minmax(32px, 10vw))',\n  }}>\n    {squares}\n  </div>\n}\n\nexport default Board;","import React, { useEffect, useState } from 'react'\nimport Board from './components/Board'\nimport { observe } from './components/Game'\nimport './App.css';\n\nconst App = () => {\n  const [knightPos, setPiecePos] = useState([1, 7]);\n  // the observe function will return an unsubscribe callback\n  useEffect(() => observe(newPos => setPiecePos(newPos)));\n  return (\n    <div>\n      <Board piecePosition={knightPos} />\n    </div>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend';\n\n\nfunction Chess() {\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <App />\n    </DragDropContextProvider>\n  )\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Chess />, rootElement);\n"],"sourceRoot":""}